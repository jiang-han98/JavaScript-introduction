3.1语法

3.1.1区分大小写

3.1.2标识符
1.第一个字符必须是一个字母、下划线(_)或美元符号($)
2.其他字符可以是字母、下划线、美元符号或数字

ECMAScript采用驼峰大小写格式， 第一个字母小写，剩下的每个单词的首字母大写

3.1.3注释

3.1.4严格模式
一些不确定的行为将得到处理，对于不安全的操作会抛出错误
启用严格模式，在顶部添加如下代码
"use strict"
或
function doSomething() {
  "use strict";
  //函数体
}

3.1.5语句
分号结尾
可以使用{}把多行代码组合到一个代码块中
在条件控制语句中，即使代码块中只有一条语句，也最好使用{}

3.2关键字和保留字

3.3变量
var
var message;   //此时message保存undefined
不建议修改变量所保存的类型，但这种操作可行
定义在 如：函数 中的局部变量，使用var定义的变量，这个变量在函数退出后就会被销毁
省略var 会定义一个全局变量，如：
function test() {
  message = "hi"l;
}
只要调用过一次test()函数，这个变量就有了定义，就可以在函数外部的任何地方被访问到。
但不推荐省略var:
1.在局部作用域定义的全局变量很难维护
2.由于相应变量不会马上就有定义而导致不必要的混乱
3.在严格模式下，会抛出错误
在严格模式下，不能定义名为eval或arguments的变量，否则会导致错误

3.4数据类型
ECMAScript有五种基本数据类型：Undefined、Null、Bollean、Number和String
            一种复杂数据类型：Object

3.4.1 typeof操作符
检测给定变量的数据类型。

undefined————未定义
boolean————布尔值
string————字符串
number————数值
object————对象或null
function————函数

var message = "some string";
alert(typeof message);         //string
alert(typeof (message));       //string

typeof是一个操作符而不是函数，因此圆括号可以使用，但不是必须的
有时typeof会返回一些技术上正确但会误导人的值：
1.typeof null 会返回object    因为null被认为是一个空的字符引用
2.typeof 正则表达式 在Safari5及之前版本、Chrome及之前版本会返回“function” 其他浏览器会返回“object”

3.4.2 undefined类型
在使用var声明变量但未对其初始化时，这个变量的值就是undefined
未初始化的变量自动被赋予undefined值，但最好先显式声明

3.4.3 null类型
空对象指针
typeof操作符检测null会返回object
如果变量要保存对象， 最好用null初始化变量  因为 只要直接检查null值就可以知道是否已经保存了对象的引用

undefined值是派生自null值的
所以alert（null == undefined）   //true

3.4.4Bollean类型
只有两个字面值：true false  且区分大小写
这两个值不等同于数字   所以 true不一定等于1  false不一定等于0
转换规则
数据类型            转换为true的值               转换为false的值
boolean            true                       false
string             任何非空字符串               ""(空字符串)
number             任何非零字符值（包括无穷大）   0和NAN（NAN来了 /滑稽）
object             任何对象                     null
undefined          N/A即notapplicable（不适用） undefined

3.4.5 number类型
8进制第一位必须是0  如果数值超出了范围，那么前导0将被忽略，后面的数字将被作为十进制解析
8进制字面量在严格模式下是无效的
16进制字面值前两位必须是0x  字母A~F大小写都行
在进行算数计算时，所有八进制十六进制都必须换算成十进制

 1.浮点数值
 e表示法
 浮点数值的最高精度是17位小数，但在算数计算时精度远不如整数
 eg. 0.1 + 0.2 = 0.30000000000000000004
 永远不要测试某个特定的浮点数值
 
 2.数值范围
 最小数值 Number.MIN_VALUE 这个值是 5e-324
 最大数值 Number.MAX_VALUE 这个值是 1.7976931348623157e+308
 
 如果一个值超过了这个范围则被自动转换成Infinity值 正数：Indinity（正无穷） 负数:-Indinity（负无穷）
 Infinity是不能够参加运算的数值














